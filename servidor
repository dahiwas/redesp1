#!/usr/bin/env python3
import asyncio
from tcp import Servidor
import re
import socket, base64, os

def validar_nome(nome):
    return re.match(br'^[a-zA-Z][a-zA-Z0-9_-]*$', nome) is not None

residuos = b''

def sair(conexao):
    print(conexao, 'conexão fechada')
    conexao.fechar()

def dados_recebidos(conexao, dados):
    global residuos
    if dados == b'':
        return sair(conexao)
    print(conexao, dados)
    #Quer dizer que existe pelo menos uma mensagem inteira
    if b'\n' in dados:
        #se a msg for apenas o final
        if dados == b'\n':
            if b'PING' in residuos:
                residuos += dados
                residuos = residuos.replace(b'PING ', b'')
                residuos = residuos.replace(b'\r\n', b'')
                conexao.enviar(b':server PONG server :%s\r\n' % residuos)
                residuos = ''
        else:
            if b'NICK' in (residuos or dados):
                residuos += dados
                residuos = residuos.replace(b'NICK ', b'')
                residuos = residuos.replace(b'\r\n', b'')
                if validar_nome(residuos) == False:
                    print(residuos)
                    conexao.enviar(b':server 432 * %s :Erroneous nickname\r\n' % residuos)
                else:
                    conexao.enviar(b':server 001 %s :Welcome\r\n' % residuos)
                    conexao.enviar(b':server 422 %s :MOTD File is missing\r\n' % residuos)
                residuos = b''
        #separar em linhas os dados recebidos
            else:
                lines  = dados.split(b'\r\n')
                if len(lines) > 2:
                    for i in range(0,len(lines)-1):
                        if b'PING' in lines[i]:
                            lines[i] = lines[i].replace(b'PING ', b'')
                            lines[i] = lines[i].replace(b'\r\n', b'')
                            conexao.enviar(b':server PONG server :%s\r\n' % lines[i])        
                    residuos += lines[len(lines)-1] 
        #Significa que so existe 1 msg
                else:
                    dados = dados.replace(b'PING ', b'')
                    dados = dados.replace(b'\r\n', b'')
                    conexao.enviar(b':server PONG server :%s\r\n' % dados)
    else:#Os residuos se acumulam aqui
        residuos += dados
        

def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
    conexao.registrar_recebedor(dados_recebidos)


servidor = Servidor(6667)
servidor.registrar_monitor_de_conexoes_aceitas(conexao_aceita)
asyncio.get_event_loop().run_forever()

